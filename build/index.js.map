{"version":3,"sources":["webpack://algorithmia-nodejs/webpack/universalModuleDefinition","webpack://algorithmia-nodejs/external \"typed-rest-client/HttpClient\"","webpack://algorithmia-nodejs/./src/HttpClient.ts","webpack://algorithmia-nodejs/./src/ContentTypeHelper.ts","webpack://algorithmia-nodejs/./src/AlgorithmExecutable.ts","webpack://algorithmia-nodejs/./src/Data.ts","webpack://algorithmia-nodejs/./src/AlgorithmiaClient.ts","webpack://algorithmia-nodejs/./src/Algorithmia.ts","webpack://algorithmia-nodejs/./src/index.ts","webpack://algorithmia-nodejs/webpack/bootstrap","webpack://algorithmia-nodejs/webpack/startup","webpack://algorithmia-nodejs/webpack/runtime/define property getters","webpack://algorithmia-nodejs/webpack/runtime/hasOwnProperty shorthand","webpack://algorithmia-nodejs/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","global","require","HttpClient","key","userAgent","process","env","npm_package_version","version","headers","httpClient","this","Authorization","TypedHttpClient","path","get","then","x","readBody","head","message","statusCode","data","contentType","post","JSON","stringify","put","del","ContentTypeHelper","input","Buffer","isBuffer","AlgorithmExecutable","client","output","stdout","timeout","contentTypeHelper","undefined","Data","replace","slice","lastIndexOf","offset","DataDir","DataFile","fileName","file","force","AlgorithmiaClient","apiAddress","defaultApiAddress","algoPrefix","dataPrefix","ALGORITHMIA_API_ADDRESS","ALGORITHMIA_API_KEY","startsWith","algoUri","Algorithmia","getDefaultClient","getClient","ALGORITHMIA_DEFAULT_API_KEY","console","log","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"algorithmia-nodejs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"algorithmia-nodejs\"] = factory();\n\telse\n\t\troot[\"algorithmia-nodejs\"] = factory();\n})(global, function() {\nreturn ","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"typed-rest-client/HttpClient\");;","import { HttpClient as TypedHttpClient } from 'typed-rest-client/HttpClient';\nimport { IHeaders } from 'typed-rest-client/Interfaces';\n\nclass HttpClient {\n  private key: string;\n\n  private userAgent = `{User-Agent : algorithmia-nodejs/${process.env.npm_package_version} (NodeJS ${process.version})}`;\n\n  private headers: IHeaders = {};\n\n  private httpClient: TypedHttpClient;\n\n  public constructor(key: string) {\n    this.key = key;\n    this.headers.Authorization = this.key;\n    this.httpClient = new TypedHttpClient(this.userAgent);\n  }\n\n  async get(path: string) {\n    return await this.httpClient.get(path, this.headers).then((x) => {\n      return x.readBody();\n    });\n  }\n\n  async head(path: string) {\n    return await this.httpClient.head(path, this.headers).then((x) => {\n      return x.message.statusCode === 200;\n    });\n  }\n\n  async post(path: string, data: Object, contentType: string) {\n    this.headers['Content-Type'] = contentType;\n    return await this.httpClient\n      .post(path, JSON.stringify(data), this.headers)\n      .then((x) => {\n        return x.readBody();\n      });\n  }\n\n  async put(path: string, data: Object) {\n    return await this.httpClient\n      .put(path, JSON.stringify(data), this.headers)\n      .then((x) => {\n        return x.readBody();\n      });\n  }\n\n  async delete(path: string) {\n    return await this.httpClient.del(path, this.headers).then((x) => {\n      return x.readBody();\n    });\n  }\n}\n\nexport { HttpClient };\n","class ContentTypeHelper {\n  contentTypeHelper(input: Object): string {\n    let contentType: string;\n\n    if (Buffer.isBuffer(input)) {\n      contentType = 'application/octet-stream';\n    } else if (typeof input === 'string') {\n      contentType = 'text/plain';\n    } else {\n      contentType = 'application/json';\n    }\n\n    return contentType;\n  }\n}\n\nexport { ContentTypeHelper };\n","import { HttpClient } from './HttpClient';\nimport { ContentTypeHelper } from './ContentTypeHelper';\n\nclass AlgorithmExecutable {\n  private client: HttpClient;\n\n  private path: string;\n\n  public constructor(client: HttpClient, path: string) {\n    this.client = client;\n    this.path = path;\n  }\n\n  pipe(\n    input: Object,\n    version?: string,\n    output = 'raw',\n    stdout = false,\n    timeout = 300\n  ) {\n    const contentTypeHelper: ContentTypeHelper = new ContentTypeHelper();\n    let contentType: string;\n\n    contentType = contentTypeHelper.contentTypeHelper(input);\n\n    if (version == undefined) {\n      return this.client.post(\n        `${this.path}/?output=${output}&stdout=${stdout}&timeout=${timeout}`,\n        input,\n        contentType\n      );\n    }\n\n    return this.client.post(\n      `${this.path}/${version}/?output=${output}&stdout=${stdout}&timeout=${timeout}`,\n      input,\n      contentType\n    );\n  }\n}\n\ninterface AlgoResponse {\n  async?: boolean;\n  error?: Error;\n  metadata?: MetaData;\n  request_id?: string;\n  result?: string | Object;\n}\n\ninterface Error {\n  message: string;\n  stacktrace: string;\n}\n\ninterface MetaData {\n  content_type: string;\n  duration: string;\n  stdout: string;\n}\n\nexport { AlgorithmExecutable, AlgoResponse };\n","import { HttpClient } from './HttpClient';\nimport { ContentTypeHelper } from './ContentTypeHelper';\n\nabstract class Data {\n  protected client: HttpClient;\n\n  protected path: string;\n\n  public constructor(client: HttpClient, path: string) {\n    this.client = client;\n    this.path = path.replace(/data\\:\\/\\//, '');\n  }\n\n  baseName(): string {\n    return this.path.slice(this.path.lastIndexOf('/') + 1);\n  }\n\n  parent(): DataDir | null {\n    const offset = this.path.lastIndexOf('/');\n    if (offset >= 0) {\n      return new DataDir(this.client, `data://${this.path.slice(0, offset)}`);\n    }\n\n    return null;\n  }\n}\n\n/*\n * File objects in the Algorithmia Data API\n */\nclass DataFile extends Data {\n  get() {\n    return this.client.get(this.path);\n  }\n\n  put(input: string) {\n    return this.client.put(this.path, input);\n  }\n\n  delete() {\n    return this.client.delete(this.path);\n  }\n\n  exists() {\n    return this.client.head(this.path);\n  }\n}\n\n/*\n# Dir objects in the Algorithmia Data API\n*/\nclass DataDir extends Data {\n  file(fileName: string) {\n    return new DataFile(this.client, `data://${this.path}/${fileName}`);\n  }\n\n  get() {\n    return this.client.get(this.path);\n  }\n\n  put(fileName: string, input: string) {\n    return this.file(fileName).put(input);\n  }\n\n  post(input: string) {\n    const contentTypeHelper: ContentTypeHelper = new ContentTypeHelper();\n    let contentType: string;\n\n    contentType = contentTypeHelper.contentTypeHelper(input);\n\n    return this.client.post(this.path, input, contentType);\n  }\n\n  exists() {\n    return this.client.head(this.path);\n  }\n\n  delete(force: boolean) {\n    return this.client.delete(`${this.path}?force=${force}`);\n  }\n}\n\ninterface DataList {\n  folders: string[];\n  files: string[];\n}\n\nexport { DataFile, DataDir, DataList };\n","import { HttpClient } from './HttpClient';\nimport { AlgorithmExecutable } from './AlgorithmExecutable';\nimport { DataFile, DataDir } from './Data';\n\nclass AlgorithmiaClient {\n  private defaultApiAddress = 'https://api.algorithmia.com';\n\n  private algoPrefix = '/v1/algo/';\n\n  private dataPrefix = '/v1/data/';\n\n  private key: string;\n\n  private apiAddress: string;\n\n  private httpClient: HttpClient;\n\n  constructor(key?: string, apiAddress?: string) {\n    this.apiAddress =\n      apiAddress ||\n      process.env.ALGORITHMIA_API_ADDRESS ||\n      this.defaultApiAddress;\n    this.key = key || process.env.ALGORITHMIA_API_KEY || '';\n    if (key) {\n      if (key.startsWith('Simple ')) {\n        this.key = key;\n      } else {\n        this.key = `Simple ${key}`;\n      }\n    } else {\n      this.key = '';\n    }\n\n    this.httpClient = new HttpClient(this.key);\n  }\n\n  /**\n   * Initialize an Algorithm object from this client\n   * @param algoUri the algorithm's URI, e.g., algo://user/algoname\n   * @return an Algorithm client for the specified algorithm\n   */\n  algo(algoUri: string): AlgorithmExecutable {\n    return new AlgorithmExecutable(\n      this.httpClient,\n      this.defaultApiAddress + this.algoPrefix + algoUri\n    );\n  }\n\n  /**\n   * Initialize an DataFile object from this client\n   * @param path to a data file, e.g., data://.my/foo/bar.txt\n   * @return a DataFile client for the specified file\n   */\n  file(path: string): DataFile {\n    return new DataFile(\n      this.httpClient,\n      this.defaultApiAddress + this.dataPrefix + path\n    );\n  }\n\n  /**\n   * Initialize a DataDirectory object from this client\n   * @param path to a data directory, e.g., data://.my/foo\n   * @return a DataDirectory client for the specified directory\n   */\n  dir(path: string): DataDir {\n    return new DataDir(\n      this.httpClient,\n      this.defaultApiAddress + this.dataPrefix + path\n    );\n  }\n}\n\nexport { AlgorithmiaClient };\n","import { AlgorithmiaClient } from './AlgorithmiaClient';\n\nclass Algorithmia {\n  private static client: AlgorithmiaClient;\n\n  static getClient(key?: string, apiAddress?: string): AlgorithmiaClient {\n    return new AlgorithmiaClient(key, apiAddress);\n  }\n\n  static defaultClient(): AlgorithmiaClient {\n    return Algorithmia.getDefaultClient();\n  }\n\n  static getDefaultClient(): AlgorithmiaClient {\n    if (Algorithmia.client == null) {\n      Algorithmia.client = new AlgorithmiaClient();\n    }\n\n    return Algorithmia.client;\n  }\n}\n\nexport { Algorithmia };\n","import { DataFile } from './Data';\nimport { Algorithmia } from './Algorithmia';\n\nexport { Algorithmia } from './Algorithmia';\nexport { AlgorithmiaClient } from './AlgorithmiaClient';\nexport { DataFile, DataDir, DataList } from './Data';\n\nconst file: DataFile = Algorithmia.getClient(\n  process.env.ALGORITHMIA_DEFAULT_API_KEY\n).file('data://dherring/DalesFunTime/NahDawg.txt');\nfile.get().then((x) => {\n  console.log(x);\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(638);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}